<!DOCTYPE html>
<html lang="en" class="dark">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>qURL - Free URL Shortener</title>
    <meta name="description" content="Shorten links Quickly, Safely, and for Free">
    <link rel="stylesheet" href="/css/style.css">

    </style>
    <script src="https://cdn.jsdelivr.net/npm/qrcode-generator@1.4.4/qrcode.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/particles.js@2.0.0/particles.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <style>
        #particles-js {
            position: fixed;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            z-index: -1;
        }
    </style>
</head>
<body class="min-h-screen bg-gradient-to-br from-gray-100 to-gray-300 dark:from-gray-800 dark:to-gray-900 flex flex-col justify-between transition-colors duration-300">
    <div id="particles-js"></div>
    
    <nav class="bg-white/10 dark:bg-black/10 backdrop-blur-md p-4">
        <div class="container mx-auto flex justify-between items-center">
            <h1 class="text-2xl font-bold text-gray-800 dark:text-white">qURL</h1>
            <ul class="flex space-x-4">
                <li><a href="#" class="text-gray-600 dark:text-gray-300 hover:text-primary dark:hover:text-primary-light">Report Abuse</a></li>
                <li><a href="#" class="text-gray-600 dark:text-gray-300 hover:text-primary dark:hover:text-primary-light">API</a></li>
                <li><a href="#" class="text-gray-600 dark:text-gray-300 hover:text-primary dark:hover:text-primary-light">Donate</a></li>
            </ul>
        </div>
    </nav>

    <main class="flex-grow flex items-center justify-center p-4">
        <div id="app" class="w-full max-w-md backdrop-blur-2xl bg-white/10 dark:bg-black/10 rounded-3xl shadow-2xl overflow-hidden opacity-0 translate-y-4 transition-all duration-500">
            <div class="p-8 space-y-6">
                <div class="flex justify-between items-center">
                    <h2 class="text-3xl font-bold text-gray-800 dark:text-white">qURL</h2>
                    <button id="theme-toggle" class="p-2 rounded-full bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 transition-colors duration-300">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
                        </svg>
                    </button>
                </div>
                <p class="text-gray-600 dark:text-gray-400 text-center">Shorten links Quickly, Safely, and for Free
                </p>
                
                <form id="submit-url">
                <div class="space-y-2">
                    <label for="url" class="text-gray-700 dark:text-gray-300">Enter your URL</label>
                    <div class="relative">
                        <input
                            id="url"
                            type="url"
                            placeholder="https://example.com"
                            class="w-full bg-white/20 dark:bg-black/20 border-none text-gray-800 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 rounded-md py-2 px-3 pr-24"
                            required
                            autocomplete="off"
                        >
                        <button
                            id="shortenBtn"
                            class="absolute right-1 top-1 bg-primary hover:bg-primary-dark text-white px-4 py-1 rounded-md transition-colors duration-300"
                        >
                            Shorten
                        </button>
                    </div>
                </div>
               
                <div class="space-y-2">
                    <label for="url" class="text-gray-700 dark:text-gray-300">Alias (Optional)</label>
                    <div class="relative">
                        <input
                            id="alias"
                            type="text"
                            class="w-full bg-white/20 dark:bg-black/20 border-none text-gray-800 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 rounded-md py-2 px-3 pr-24"
                        >
                    </div>
                </div>
                </form>

                <div id="resultContainer" class="space-y-4 hidden">
                    <div class="p-4 bg-white/20 dark:bg-black/20 rounded-lg flex items-center justify-between">
                        <div class="flex items-center space-x-2">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-primary-light" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule="evenodd" />
                            </svg>
                            <span id="shortUrl" class="text-gray-800 dark:text-white font-medium"></span>
                        </div>
                        <button
                            id="copyBtn"
                            class="text-gray-600 dark:text-gray-400 hover:text-primary-light dark:hover:text-primary-light p-2 rounded-full transition-colors duration-300"
                        >
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                <path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z" />
                                <path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z" />
                            </svg>
                        </button>
                    </div>

                    <div id="qrContainer" class="flex justify-center opacity-0 scale-90 transition-all duration-300">
                        <div class="p-4 bg-white dark:bg-gray-800 rounded-lg shadow-lg">
                            <img id="qrCode" alt="QR Code" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <footer class="bg-white/10 dark:bg-black/10 backdrop-blur-md p-4 mt-8">
        <div class="container mx-auto text-center text-gray-600 dark:text-gray-400">
            <p>&copy; <%= new Date().getFullYear() %> qURL. All rights reserved.</p>
        </div>
    </footer>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const app = document.getElementById('app');
            const urlInput = document.getElementById('url');
            const aliasInput = document.getElementById('alias');
            const shortenBtn = document.getElementById('shortenBtn');
            const resultContainer = document.getElementById('resultContainer');
            const shortUrlElement = document.getElementById('shortUrl');
            const copyBtn = document.getElementById('copyBtn');
            const qrContainer = document.getElementById('qrContainer');
            const qrCode = document.getElementById('qrCode');
            const themeToggle = document.getElementById('theme-toggle');
            const submitUrl = document.getElementById('submit-url');

            // Theme toggle functionality
            function updateTheme(isDark) {
                if (isDark) {
                    document.documentElement.classList.add('dark');
                    themeToggle.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" /></svg>';
                } else {
                    document.documentElement.classList.remove('dark');
                    themeToggle.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" /></svg>';
                }
            }

            // Check for system preference
            const prefersDark = window.matchMedia('(prefers-color-scheme: dark)');
            updateTheme(prefersDark.matches);

            themeToggle.addEventListener('click', () => {
                const isDark = document.documentElement.classList.toggle('dark');
                updateTheme(isDark);
            });

            // Show the app with a fade-in effect
            setTimeout(() => {
                app.classList.remove('opacity-0', 'translate-y-4');
            }, 100);

            submitUrl.addEventListener('submit', async (e) => {
                e.preventDefault();
                const originalUrl = urlInput.value.trim();
                const alias = aliasInput.value.trim();
                if (!originalUrl) return;

                shortenBtn.disabled = true;
                shortenBtn.innerHTML = '<svg class="animate-spin h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>';

                try {
                    // Simulating API call
                 //   await new Promise(resolve => setTimeout(resolve, 1500));
                     const urldata = await axios.get(`/api/create?${new URLSearchParams({ alias, url: originalUrl })}`)
                     const shorturldata = urldata.data;
                     const shortUrl = shorturldata.response.short;

                    shortUrlElement.textContent = shortUrl;
                    resultContainer.classList.remove('hidden');
                    
                    // Generate QR Code
                    const qr = qrcode(0, 'L');
                    qr.addData(shortUrl);
                    qr.make();
                    qrCode.src = qr.createDataURL(4);
                    
                    setTimeout(() => {
                        qrContainer.classList.remove('opacity-0', 'scale-90');
                    }, 300);

                } catch (error) {
                    console.error('Error generating short link:', error);
                } finally {
                    shortenBtn.disabled = false;
                    shortenBtn.textContent = 'Shorten';
                }
            });

            copyBtn.addEventListener('click', () => {
                navigator.clipboard.writeText(shortUrlElement.textContent);
                copyBtn.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" /></svg>';
                setTimeout(() => {
                    copyBtn.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z" /><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z" /></svg>';
                }, 2000);
            });

            // Initialize particles.js
            particlesJS('particles-js', {
                particles: {
                    number: { value: 80, density: { enable: true, value_area: 800 } },
                    color: { value: "#ffffff" },
                    shape: { type: "circle" },
                    opacity: { value: 0.5, random: false },
                    size: { value: 3, random: true },
                    line_linked: { enable: true, distance: 150, color: "#ffffff", opacity: 0.4, width: 1 },
                    move: { enable: true, speed: 6, direction: "none", random: false, straight: false, out_mode: "out", bounce: false }
                },
                interactivity: {
                    detect_on: "canvas",
                    events: { onhover: { enable: true, mode: "repulse" }, onclick: { enable: true, mode: "push" }, resize: true },
                    modes: { grab: { distance: 400, line_linked: { opacity: 1 } }, bubble: { distance: 400, size: 40, duration: 2, opacity: 8 }, repulse: { distance: 200, duration: 0.4 }, push: { particles_nb: 4 }, remove: { particles_nb: 2 } }
                },
                retina_detect: true
            });
        });
    </script>
</body>
</html>